<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/security
	https://www.springframework.org/schema/security/spring-security.xsd
        ">

    <!-- Scans for components that will be auto-registered as Spring beans -->
    <context:component-scan base-package="org.solent.com504.project.impl.service,
                org.solent.com504.project.impl.user.service, 
                org.solent.com504.project.impl.dao,
                org.solent.com504.project.impl.party.service" />

    <!-- Scans for repositories that will be auto-registered -->
    <jpa:repositories base-package="org.solent.com504.project.impl.dao.user.springdata,
                 org.solent.com504.project.impl.dao.party.springdata,
                 org.solent.com504.project.impl.dao.springdata" />
    <!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
    <context:annotation-config />

    <!-- JPA Hibernate -->

    <!-- Datasource, that is currently hsqldb (in-memory database). -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        
        <!-- this is or in memory database - no files created -->
        <!--  <property name="url" value="jdbc:hsqldb:mem://productDb" />-->
        
        <!-- this is for file based database created in target directory or tomcat temp -->
        <!-- shutdown = true shuts down database when last connection is closed -->
        <!-- an alternative is to use SHUTDOWN -->
        <!-- see https://stackoverflow.com/questions/16201704/transactional-on-spring-shutdown-to-properly-shutdown-hsqldb -->
        <property name="url" value="jdbc:hsqldb:file:#{ systemProperties['java.io.tmpdir'] }/hsqldb/productDb;shutdown=true" />

        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <!-- EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:packagesToScan="org.solent.com504.project.model"
          p:dataSource-ref="dataSource" >
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL"/>
                <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
            </bean>
        </property>
    </bean>

    <!-- Transactions -->
    <!-- note see https://stackoverflow.com/questions/14509142/beannotofrequiredtypeexception-due-to-autowired-fields -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

</beans>

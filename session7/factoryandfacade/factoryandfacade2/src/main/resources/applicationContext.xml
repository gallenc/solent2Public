<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

    <!-- prototype beans -->
    <!-- A bean with prototype scope will return a different instance every time it is requested from the container. -->
    <!-- Note - the container maintains no reference to protoype beans so thay can be garbage collected when no longer referenced -->
   
    <!-- Any call to the context to get a cat, cow or dog will create a NEW object of that type -->
    <bean id="cat" class="org.solent.com504.factoryandfacade.model.Cat" scope="prototype"/>
    <bean id="cow" class="org.solent.com504.factoryandfacade.model.Cow" scope="prototype"/>
    <bean id="dog" class="org.solent.com504.factoryandfacade.model.Dog" scope="prototype"/>
           
    <!-- singleton beans -->
    <!-- Defining a bean with singleton scope means the container creates a single instance of that bean,--> 
    <!-- and all requests for that bean name will return the same object, which is cached. -->
    <!-- Any modifications to the object will be reflected in all references to the bean.  -->
    <!-- This scope is the default value if no other scope is specified.  --> 
    
    <!-- Only ONE farmFacade will ever exist because it is a singleton -->             
    <bean id="farmFacade" class="org.solent.com504.factoryandfacade.springimpl.FarmFacadeImpl" />
  

</beans>

